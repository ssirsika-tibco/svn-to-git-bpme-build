Index: core/AuthLoggingInfo.java
===================================================================
--- core/AuthLoggingInfo.java	(revision 0)
+++ core/AuthLoggingInfo.java	(working copy)
@@ -0,0 +1,14 @@
+package com.tibco.bpm.auth.core;
+
+import com.tibco.n2.logging.metadata.AbstractLoggingMetaData;
+
+public class AuthLoggingInfo extends AbstractLoggingMetaData
+{
+
+    public static final AuthLoggingInfo instance = new AuthLoggingInfo();
+
+    public AuthLoggingInfo()
+    {
+    }
+
+}
Index: logging/AuthAuditMessages.java
===================================================================
--- logging/AuthAuditMessages.java	(revision 0)
+++ logging/AuthAuditMessages.java	(working copy)
@@ -0,0 +1,40 @@
+package com.tibco.bpm.auth.logging;
+
+import com.tibco.n2.logging.context.interfaces.N2LFILogMessage;
+import com.tibco.n2.logging.context.message.N2LogMessageContext;
+import com.tibco.n2.logging.context.parser.N2LFContextContainer;
+
+public final class AuthAuditMessages implements N2LFILogMessage {
+
+	public static final AuthAuditMessages USER_LOGGED_IN;
+	public static final AuthAuditMessages USER_LOGGED_OUT;
+	protected N2LFContextContainer ctx;
+	private static final AuthAuditMessages ENUM$VALUES[];
+
+	private AuthAuditMessages(String s, int i) {
+		ctx = new N2LFContextContainer(this);
+	}
+
+	public N2LogMessageContext getContext() {
+		return (N2LogMessageContext) ctx.get();
+	}
+
+	public void setContext(N2LogMessageContext aValue) {
+		ctx.set(aValue);
+	}
+
+	public static AuthAuditMessages[] values() {
+		AuthAuditMessages aauthauditmessages[];
+		int i;
+		AuthAuditMessages aauthauditmessages1[];
+		System.arraycopy(aauthauditmessages = ENUM$VALUES, 0,
+				aauthauditmessages1 = new AuthAuditMessages[i = aauthauditmessages.length], 0, i);
+		return aauthauditmessages1;
+	}
+
+	static {
+		USER_LOGGED_IN = new AuthAuditMessages("USER_LOGGED_IN", 0);
+		USER_LOGGED_OUT = new AuthAuditMessages("USER_LOGGED_OUT", 1);
+		ENUM$VALUES = (new AuthAuditMessages[] { USER_LOGGED_IN, USER_LOGGED_OUT });
+	}
+}
\ No newline at end of file
Index: logging/AuthExceptionMessages.java
===================================================================
--- logging/AuthExceptionMessages.java	(revision 0)
+++ logging/AuthExceptionMessages.java	(working copy)
@@ -0,0 +1,50 @@
+package com.tibco.bpm.auth.logging;
+
+import com.tibco.n2.logging.context.interfaces.N2LFIExceptionMessage;
+import com.tibco.n2.logging.context.message.N2LogExceptionContext;
+import com.tibco.n2.logging.context.parser.N2LFContextContainer;
+
+public final class AuthExceptionMessages implements N2LFIExceptionMessage {
+
+	public static final AuthExceptionMessages AUTHENTICATION_FAILED;
+	protected N2LFContextContainer ctx;
+	private static final AuthExceptionMessages ENUM$VALUES[];
+
+	private AuthExceptionMessages(String s, int i) {
+		ctx = new N2LFContextContainer(this);
+	}
+
+	public void setContext(N2LogExceptionContext ctx) {
+		this.ctx.set(ctx);
+	}
+
+	public String getMessage() {
+		return ((N2LogExceptionContext) ctx.get()).getMessage();
+	}
+
+	public String getMessageId() {
+		return ((N2LogExceptionContext) ctx.get()).getMessageId();
+	}
+
+	public static AuthExceptionMessages[] values() {
+		AuthExceptionMessages aauthexceptionmessages[];
+		int i;
+		AuthExceptionMessages aauthexceptionmessages1[];
+		System.arraycopy(aauthexceptionmessages = ENUM$VALUES, 0,
+				aauthexceptionmessages1 = new AuthExceptionMessages[i = aauthexceptionmessages.length], 0, i);
+		return aauthexceptionmessages1;
+	}
+
+
+	static {
+		AUTHENTICATION_FAILED = new AuthExceptionMessages("AUTHENTICATION_FAILED", 0);
+		ENUM$VALUES = (new AuthExceptionMessages[] { AUTHENTICATION_FAILED });
+	}
+
+
+	@Override
+	public N2LogExceptionContext getContext() {
+		// TODO Auto-generated method stub
+		return null;
+	}
+}
\ No newline at end of file
Index: logging/AuthLoggingInfo.java
===================================================================
--- logging/AuthLoggingInfo.java	(revision 0)
+++ logging/AuthLoggingInfo.java	(working copy)
@@ -0,0 +1,9 @@
+package com.tibco.bpm.auth.logging;
+
+import com.tibco.n2.logging.metadata.AbstractLoggingMetaData;
+
+public class AuthLoggingInfo {
+
+	public static AbstractLoggingMetaData instance;
+
+}
Index: logging/AuthAuditMessages.java
===================================================================
--- logging/AuthAuditMessages.java	(revision 0)
+++ logging/AuthAuditMessages.java	(working copy)
@@ -0,0 +1,40 @@
+package com.tibco.bpm.auth.logging;
+
+import com.tibco.n2.logging.context.interfaces.N2LFILogMessage;
+import com.tibco.n2.logging.context.message.N2LogMessageContext;
+import com.tibco.n2.logging.context.parser.N2LFContextContainer;
+
+public final class AuthAuditMessages implements N2LFILogMessage {
+
+	public static final AuthAuditMessages USER_LOGGED_IN;
+	public static final AuthAuditMessages USER_LOGGED_OUT;
+	protected N2LFContextContainer ctx;
+	private static final AuthAuditMessages ENUM$VALUES[];
+
+	private AuthAuditMessages(String s, int i) {
+		ctx = new N2LFContextContainer(this);
+	}
+
+	public N2LogMessageContext getContext() {
+		return (N2LogMessageContext) ctx.get();
+	}
+
+	public void setContext(N2LogMessageContext aValue) {
+		ctx.set(aValue);
+	}
+
+	public static AuthAuditMessages[] values() {
+		AuthAuditMessages aauthauditmessages[];
+		int i;
+		AuthAuditMessages aauthauditmessages1[];
+		System.arraycopy(aauthauditmessages = ENUM$VALUES, 0,
+				aauthauditmessages1 = new AuthAuditMessages[i = aauthauditmessages.length], 0, i);
+		return aauthauditmessages1;
+	}
+
+	static {
+		USER_LOGGED_IN = new AuthAuditMessages("USER_LOGGED_IN", 0);
+		USER_LOGGED_OUT = new AuthAuditMessages("USER_LOGGED_OUT", 1);
+		ENUM$VALUES = (new AuthAuditMessages[] { USER_LOGGED_IN, USER_LOGGED_OUT });
+	}
+}
\ No newline at end of file
Index: logging/AuthExceptionMessages.java
===================================================================
--- logging/AuthExceptionMessages.java	(revision 0)
+++ logging/AuthExceptionMessages.java	(working copy)
@@ -0,0 +1,50 @@
+package com.tibco.bpm.auth.logging;
+
+import com.tibco.n2.logging.context.interfaces.N2LFIExceptionMessage;
+import com.tibco.n2.logging.context.message.N2LogExceptionContext;
+import com.tibco.n2.logging.context.parser.N2LFContextContainer;
+
+public final class AuthExceptionMessages implements N2LFIExceptionMessage {
+
+	public static final AuthExceptionMessages AUTHENTICATION_FAILED;
+	protected N2LFContextContainer ctx;
+	private static final AuthExceptionMessages ENUM$VALUES[];
+
+	private AuthExceptionMessages(String s, int i) {
+		ctx = new N2LFContextContainer(this);
+	}
+
+	public void setContext(N2LogExceptionContext ctx) {
+		this.ctx.set(ctx);
+	}
+
+	public String getMessage() {
+		return ((N2LogExceptionContext) ctx.get()).getMessage();
+	}
+
+	public String getMessageId() {
+		return ((N2LogExceptionContext) ctx.get()).getMessageId();
+	}
+
+	public static AuthExceptionMessages[] values() {
+		AuthExceptionMessages aauthexceptionmessages[];
+		int i;
+		AuthExceptionMessages aauthexceptionmessages1[];
+		System.arraycopy(aauthexceptionmessages = ENUM$VALUES, 0,
+				aauthexceptionmessages1 = new AuthExceptionMessages[i = aauthexceptionmessages.length], 0, i);
+		return aauthexceptionmessages1;
+	}
+
+
+	static {
+		AUTHENTICATION_FAILED = new AuthExceptionMessages("AUTHENTICATION_FAILED", 0);
+		ENUM$VALUES = (new AuthExceptionMessages[] { AUTHENTICATION_FAILED });
+	}
+
+
+	@Override
+	public N2LogExceptionContext getContext() {
+		// TODO Auto-generated method stub
+		return null;
+	}
+}
\ No newline at end of file
Index: logging/AuthLoggingInfo.java
===================================================================
--- logging/AuthLoggingInfo.java	(revision 0)
+++ logging/AuthLoggingInfo.java	(working copy)
@@ -0,0 +1,9 @@
+package com.tibco.bpm.auth.logging;
+
+import com.tibco.n2.logging.metadata.AbstractLoggingMetaData;
+
+public class AuthLoggingInfo {
+
+	public static AbstractLoggingMetaData instance;
+
+}
